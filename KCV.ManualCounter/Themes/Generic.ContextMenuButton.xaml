<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:control="clr-namespace:Gizeta.KCV.ManualCounter.Controls">
    <Style x:Key="ButtonStyleKey" TargetType="Button">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid x:Name="templateRoot"
                          Background="{TemplateBinding Background}"
                          TextElement.Foreground="{TemplateBinding Foreground}"
                          TextElement.FontSize="{TemplateBinding FontSize}"
                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Grid>

                    <ControlTemplate.Triggers>
                        <DataTrigger Binding="{Binding Path=IsMouseOver, RelativeSource={RelativeSource AncestorType=MenuItem}}" Value="True">
                            <Setter Property="Background" TargetName="templateRoot" Value="{DynamicResource ActiveBackgroundBrushKey}"/>
                        </DataTrigger>

                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" TargetName="templateRoot" Value="{DynamicResource AccentActiveBrushKey}"/>
                        </Trigger>

                        <DataTrigger Binding="{Binding Path=IsSubmenuOpen, RelativeSource={RelativeSource AncestorType=MenuItem}}" Value="True">
                            <Setter Property="Background" TargetName="templateRoot" Value="{DynamicResource AccentActiveBrushKey}"/>
                        </DataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <ControlTemplate x:Key="{x:Static MenuItem.TopLevelHeaderTemplateKey}" TargetType="MenuItem">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="1"/>
                <ColumnDefinition Width="Auto"/>
            </Grid.ColumnDefinitions>

            <ContentPresenter ContentSource="Header"/>
            <Rectangle x:Name="PART_SeparatorLine" Grid.Column="1" Fill="Transparent"/>
            <Grid x:Name="PART_Arrow" Grid.Column="2" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
                <Polygon x:Name="PART_ArrowPath"
                         Margin="2" Points="0,0 6,0 3,3"
                         Fill="{TemplateBinding Foreground}"
                         HorizontalAlignment="Center" VerticalAlignment="Center"/>
            </Grid>
            
            <Popup Placement="Bottom" IsOpen="{TemplateBinding IsSubmenuOpen}" AllowsTransparency="True">
                <Border SnapsToDevicePixels="True"
                        BorderThickness="1"
                        BorderBrush="{DynamicResource SemiactiveBackgroundBrushKey}"
                        Background="{DynamicResource BackgroundBrushKey}">
                    <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Cycle"/>
                </Border>
            </Popup>
        </Grid>

        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" TargetName="PART_Arrow" Value="{DynamicResource ActiveBackgroundBrushKey}"/>
                <Setter Property="Fill" TargetName="PART_ArrowPath" Value="{DynamicResource AccentActiveBrushKey}"/>
            </Trigger>
            
            <Trigger Property="IsSubmenuOpen" Value="True">
                <Setter Property="Fill" TargetName="PART_SeparatorLine" Value="{DynamicResource AccentActiveBrushKey}"/>
                <Setter Property="Background" TargetName="PART_Arrow" Value="{DynamicResource AccentActiveBrushKey}"/>
                <Setter Property="Fill" TargetName="PART_ArrowPath" Value="{DynamicResource AccentForegroundBrushKey}"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="{x:Static MenuItem.SubmenuHeaderTemplateKey}" TargetType="MenuItem">
        <Border x:Name="Border" BorderThickness="2" BorderBrush="{DynamicResource BackgroundBrushKey}">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" SharedSizeGroup="Icon"/>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="Auto" SharedSizeGroup="Shortcut"/>
                    <ColumnDefinition Width="13"/>
                </Grid.ColumnDefinitions>

                <ContentPresenter x:Name="Icon" Margin="6,0,6,0" VerticalAlignment="Center" ContentSource="Icon"/>
                <ContentPresenter x:Name="HeaderHost" Grid.Column="1" ContentSource="Header" TextElement.Foreground="{DynamicResource ActiveForegroundBrushKey}"/>
                <TextBlock x:Name="InputGestureText" Grid.Column="2" Text="{TemplateBinding InputGestureText}" Margin="5,2,0,2" DockPanel.Dock="Right"/>
                <Path Grid.Column="3" HorizontalAlignment="Center" VerticalAlignment="Center" Data="M 0 0 L 0 7 L 4 3.5 Z" Fill="{TemplateBinding Foreground}"/>

                <Popup Placement="Right" IsOpen="{TemplateBinding IsSubmenuOpen}" AllowsTransparency="True">
                    <Border SnapsToDevicePixels="True"
                            BorderThickness="1"
                            BorderBrush="{DynamicResource SemiactiveBackgroundBrushKey}"
                            Background="{DynamicResource BackgroundBrushKey}">
                        <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Cycle"/>
                    </Border>
                </Popup>
            </Grid>
        </Border>

        <ControlTemplate.Triggers>
            <Trigger Property="Icon" Value="{x:Null}">
                <Setter TargetName="Icon" Property="Visibility" Value="Hidden" />
            </Trigger>

            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" TargetName="Border" Value="{DynamicResource ActiveBackgroundBrushKey}"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="{x:Static MenuItem.SubmenuItemTemplateKey}" TargetType="MenuItem">
        <Border x:Name="Border" BorderThickness="2" BorderBrush="{DynamicResource BackgroundBrushKey}">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" SharedSizeGroup="Icon"/>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="Auto" SharedSizeGroup="Shortcut"/>
                    <ColumnDefinition Width="13"/>
                </Grid.ColumnDefinitions>

                <ContentPresenter x:Name="Icon" Margin="6,0,6,0" VerticalAlignment="Center" ContentSource="Icon"/>
                <Border x:Name="Check" Width="13" Height="13" Visibility="Collapsed" Margin="6,0,6,0" BorderThickness="1" Background="{DynamicResource SemiactiveBackgroundBrushKey}">
                    <Path x:Name="CheckMark" Width="7" Height="7" Visibility="Hidden" SnapsToDevicePixels="False" StrokeThickness="2" Stroke="{DynamicResource SemiActiveForegroundBrushKey}" Data="M 0 0 L 7 7 M 0 7 L 7 0"/>
                </Border>
                <ContentPresenter x:Name="HeaderHost" Grid.Column="1" ContentSource="Header" TextElement.Foreground="{DynamicResource ActiveForegroundBrushKey}"/>
                <TextBlock x:Name="InputGestureText" Grid.Column="2" Text="{TemplateBinding InputGestureText}" Margin="5,2,0,2" DockPanel.Dock="Right"/>
            </Grid>
        </Border>

        <ControlTemplate.Triggers>
            <Trigger Property="Icon" Value="{x:Null}">
                <Setter TargetName="Icon" Property="Visibility" Value="Hidden" />
            </Trigger>

            <Trigger Property="IsChecked" Value="True">
                <Setter TargetName="CheckMark" Property="Visibility" Value="Visible" />
            </Trigger>

            <Trigger Property="IsCheckable" Value="True">
                <Setter TargetName="Check" Property="Visibility" Value="Visible" />
                <Setter TargetName="Icon" Property="Visibility" Value="Hidden" />
            </Trigger>

            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" TargetName="Border" Value="{DynamicResource ActiveBackgroundBrushKey}"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style x:Key="MenuItemStyleKey" TargetType="MenuItem">
        <Setter Property="Background" Value="{DynamicResource ThemeBrushKey}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource BorderBrushKey}"/>
        <Setter Property="Foreground" Value="{DynamicResource ActiveForegroundBrushKey}"/>
        <Setter Property="ItemContainerStyle" Value="{Binding Path=Style, RelativeSource={RelativeSource Self}}"/>
        <Style.Triggers>
            <Trigger Property="Role" Value="TopLevelHeader">
                <Setter Property="Template" Value="{StaticResource {x:Static MenuItem.TopLevelHeaderTemplateKey}}"/>
            </Trigger>
            <Trigger Property="Role" Value="SubmenuHeader">
                <Setter Property="Template" Value="{StaticResource {x:Static MenuItem.SubmenuHeaderTemplateKey}}"/>
            </Trigger>
            <Trigger Property="Role" Value="SubmenuItem">
                <Setter Property="Template" Value="{StaticResource {x:Static MenuItem.SubmenuItemTemplateKey}}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="MenuStyleKey" TargetType="Menu">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Menu">
                    <Grid IsItemsHost="True"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="control:ContextMenuButton">
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="Background" Value="{DynamicResource ThemeBrushKey}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource BorderBrushKey}"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Foreground" Value="{DynamicResource ActiveForegroundBrushKey}"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="control:ContextMenuButton">
                    <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                        <Menu Foreground="{TemplateBinding Foreground}"
                              Style="{StaticResource MenuStyleKey}"
                              IsMainMenu="False">
                            <MenuItem x:Name="PART_MenuItem"
                                      SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                      Style="{StaticResource MenuItemStyleKey}"
                                      ItemContainerStyle="{StaticResource MenuItemStyleKey}"
                                      ItemsSource="{Binding Path=Menu.Items, RelativeSource={RelativeSource TemplatedParent}}">
                                <MenuItem.Header>
                                    <Button x:Name="PART_Button"
                                            Background="{TemplateBinding Background}"
                                            Foreground="{TemplateBinding Foreground}"
                                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                            HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                            VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                            FontSize="{TemplateBinding FontSize}"
                                            Command="{TemplateBinding Command}"
                                            CommandParameter="{TemplateBinding CommandParameter}"
                                            CommandTarget="{TemplateBinding CommandTarget}"
                                            Style="{StaticResource ButtonStyleKey}">
                                        <ContentPresenter/>
                                    </Button>
                                </MenuItem.Header>
                            </MenuItem>
                        </Menu>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>